<!-- app/views/menus/show.html.erb -->
<div class="card shadow-sm mt-4">
  <div class="card-header bg-white">
    <h1 class="h3 mb-0"><%= @menu.title %></h1>
    <p class="text-muted mb-0"><%= @menu.date.strftime("%A, %B %d, %Y") %></p>
  </div>
  
  <div class="card-body">
    <div class="d-flex mb-3">
      <%= link_to 'Add Category', categories_path(menu_id: @menu.id), class: 'btn btn-primary me-2' %>
      <%= link_to 'Print', '#', onclick: 'window.print(); return false;', class: 'btn btn-outline-secondary' %>
    </div>

    <!-- Search and Add Items Section -->
    <div class="card mb-4">
      <div class="card-header bg-light">
        <h2 class="h5 mb-0">Add Items to Menu</h2>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <input type="text" id="item-search" class="form-control" placeholder="Search items...">
            </div>
            <div id="search-results" class="list-group" style="max-height: 400px; overflow-y: auto;">
              <!-- Search results will appear here -->
            </div>
          </div>
          <div class="col-md-6">
            <div class="bg-light p-3 rounded">
              <h5 class="mb-3">Selected Items</h5>
              <div id="selected-items">
                <!-- Selected items will appear here -->
              </div>
              <div class="mt-3">
                <select id="category-select" class="form-select">
                  <option value="">Select a category</option>
                  <% @menu.menu_categories.each do |mc| %>
                    <option value="<%= mc.id %>"><%= mc.category.name %></option>
                  <% end %>
                </select>
                <button id="add-to-menu" class="btn btn-primary mt-2" disabled>Add to Menu</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Existing Menu Categories -->
    <% @menu_categories.each do |menu_category| %>
      <div class="card mb-4">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
          <h2 class="h5 mb-0"><%= menu_category.category.name %></h2>
          <%= link_to 'Add Item', items_path(menu_id: @menu.id, menu_category_id: menu_category.id), class: 'btn btn-sm btn-outline-primary' %>
        </div>
        
        <div class="card-body">
          <ul class="list-group list-group-flush">
            <% menu_category.menu_items.each do |menu_item| %>
              <li class="list-group-item">
                <div class="d-flex justify-content-between">
                  <div>
                    <strong><%= menu_item.item.name %></strong>
                    <p class="text-muted mb-0"><%= menu_item.item.description %></p>
                  </div>
                  <div class="text-end">
                    <span class="d-block text-success">$<%= sprintf('%.2f', menu_item.item.cash_price) %> cash</span>
                    <span class="d-block text-muted">$<%= sprintf('%.2f', menu_item.item.credit_price) %> credit</span>
                  </div>
                </div>
              </li>
            <% end %>
          </ul>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('item-search');
  const searchResults = document.getElementById('search-results');
  const selectedItems = document.getElementById('selected-items');
  const categorySelect = document.getElementById('category-select');
  const addToMenuBtn = document.getElementById('add-to-menu');
  
  let selectedItemsData = [];
  
  // Search items
  searchInput.addEventListener('input', function() {
    const query = this.value.trim();
    if (query.length > 2) {
      fetch(`/items/search?q=${encodeURIComponent(query)}`)
        .then(response => response.json())
        .then(items => {
          searchResults.innerHTML = '';
          items.forEach(item => {
            const itemElement = document.createElement('div');
            itemElement.className = 'list-group-item list-group-item-action';
            itemElement.innerHTML = `
              <div class="d-flex justify-content-between align-items-center">
                <div>
                  <strong>${item.name}</strong>
                  <p class="text-muted mb-0 small">${item.description || ''}</p>
                </div>
                <div class="text-end">
                  <span class="d-block text-success">$${item.cash_price} cash</span>
                  <span class="d-block text-muted">$${item.credit_price} credit</span>
                </div>
                <button class="btn btn-sm btn-outline-primary add-item" data-item-id="${item.id}">
                  Add
                </button>
              </div>
            `;
            searchResults.appendChild(itemElement);
          });
          
          // Add event listeners to add buttons
          document.querySelectorAll('.add-item').forEach(button => {
            button.addEventListener('click', function() {
              const itemId = parseInt(this.getAttribute('data-item-id'));
              const item = items.find(i => i.id === itemId);
              
              if (!selectedItemsData.some(i => i.id === itemId)) {
                selectedItemsData.push(item);
                renderSelectedItems();
              }
            });
          });
        });
    }
  });
  
  // Render selected items
  function renderSelectedItems() {
    selectedItems.innerHTML = '';
    selectedItemsData.forEach(item => {
      const itemElement = document.createElement('div');
      itemElement.className = 'card mb-2';
      itemElement.innerHTML = `
        <div class="card-body p-2">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <strong>${item.name}</strong>
              <p class="text-muted mb-0 small">${item.description || ''}</p>
            </div>
            <div class="text-end">
              <span class="d-block text-success">$${item.cash_price} cash</span>
              <span class="d-block text-muted">$${item.credit_price} credit</span>
            </div>
            <button class="btn btn-sm btn-outline-danger remove-item" data-item-id="${item.id}">
              Ã—
            </button>
          </div>
        </div>
      `;
      selectedItems.appendChild(itemElement);
    });
    
    // Add event listeners to remove buttons
    document.querySelectorAll('.remove-item').forEach(button => {
      button.addEventListener('click', function() {
        const itemId = parseInt(this.getAttribute('data-item-id'));
        selectedItemsData = selectedItemsData.filter(i => i.id !== itemId);
        renderSelectedItems();
      });
    });
    
    // Enable/disable add to menu button
    addToMenuBtn.disabled = selectedItemsData.length === 0 || categorySelect.value === '';
  }
  
  // Category select change
  categorySelect.addEventListener('change', function() {
    addToMenuBtn.disabled = selectedItemsData.length === 0 || this.value === '';
  });
  
  // Add to menu
  addToMenuBtn.addEventListener('click', function() {
    const menuCategoryId = parseInt(categorySelect.value);
    
    selectedItemsData.forEach(item => {
      fetch('/menu_items', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({
          menu_item: {
            menu_id: <%= @menu.id %>,
            menu_category_id: menuCategoryId,
            item_id: item.id
          }
        })
      })
      .then(response => {
        if (response.ok) {
          window.location.reload();
        }
      });
    });
  });
});
</script>