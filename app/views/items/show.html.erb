<% content_for :title, @item.persisted? ? @item.name : "New Item" %>

<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-lg-10">
      <div class="bg-light p-5 rounded-3 mb-4 shadow position-relative">
        
        <!-- Preview box -->
        <div class="bg-white p-4 mb-4 shadow" style="max-width: 336px; border-radius: 0;">
          <div class="px-3 py-2">
            <h1 class="mb-3 h4"><%= @item.persisted? ? @item.name : "Item Name" %></h1>
            <p class="text-muted small mb-0">
              <% if @item.persisted? && (@item.credit_price.present? || @item.cash_price.present?) %>
                <br><%= number_to_currency(@item.credit_price) %> (<%= number_to_currency(@item.cash_price) %>)
              <% end %>
            </p>
            <p class="text-muted small mt-2">
              <strong>Category:</strong> <%= @item.category&.name || "Not selected" %>
            </p>
          </div>
        </div>

        <!-- Category dropdown (always shown) -->
        <div class="position-absolute top-0 end-0 mt-4 me-4" style="z-index: 1; width: 300px; left: 90%; transform: translateX(-90%);">
          <div class="mb-2 text-center">
            <h2><%= @item.category.present? ? @item.category.name.upcase : "SELECT CATEGORY" %></h2>
          </div>

          <div class="dropdown" style="width: 100%;">
            <button class="btn btn-outline-secondary dropdown-toggle w-100 text-start" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
              <%= @item.category.present? ? @item.category.name : "Select Category" %>
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="categoryDropdown">
              <% Category.all.order(:name).each do |category| %>
                <li>
                  <%= link_to category.name, "#", class: "dropdown-item", data: { category_id: category.id } %>
                </li>
              <% end %>
            </ul>
          </div>
          <% if @item.errors[:category_id].any? %>
            <div class="text-danger small mt-1">
              <%= @item.errors[:category_id].first %>
            </div>
          <% end %>
        </div>

        <%= form_with(model: @item, id: "item-form") do |form| %>
          <% if @item.errors.any? %>
            <div class="alert alert-danger">
              <h2><%= pluralize(@item.errors.count, "error") %> prohibited saving:</h2>
              <ul>
                <% @item.errors.each do |error| %>
                  <li><%= error.full_message %></li>
                <% end %>
              </ul>
            </div>
          <% end %>

          <%= form.hidden_field :category_id, id: "category-field", required: true %>

          <div class="row mb-3">
            <div class="col-md-6">
              <%= form.label :name, class: "form-label" %>
              <%= form.text_field :name, 
                  class: "form-control form-control-lg",
                  value: @item.name,
                  placeholder: "Enter Item Name" %>
            </div>
          </div>

          <div class="row mb-3">
            <div class="col">
              <%= form.label :description, class: "form-label" %>
              <%= form.text_area :description, 
                  class: "form-control", 
                  rows: 3,
                  value: @item.description,
                  placeholder: "Enter item description" %>
            </div>
          </div>

          <div class="row mb-4">
            <div class="col-md-6">
              <div class="card mb-3">
                <div class="card-header bg-secondary text-white">
                  <span class="form-label mb-0">Calculated Credit Price</span>
                </div>
                <div class="card-body">
                  <input type="text" 
                         class="form-control form-control-lg text-end"
                         value="<%= number_to_currency(@item.credit_price || 0, unit: '') %>"
                         readonly
                         id="credit-price-display">
                </div>
              </div>
            </div>

            <div class="col-md-6">
              <div class="card mb-3">
                <div class="card-header bg-warning text-black">
                  <%= form.label :cash_price, "Cash Price", class: "form-label mb-0" %>
                </div>
                <div class="card-body">
                  <%= form.text_field :cash_price,
                    value: number_to_currency(@item.cash_price || 0, unit: ''), 
                    class: "form-control form-control-lg text-end currency-input",
                    inputmode: "decimal",
                    id: "cash-price-input",
                    onclick: "this.select();" %>
                </div>
              </div>
            </div> 
          </div>      

          <%= form.hidden_field :credit_price, id: "credit-price-field" %>

          <div class="d-flex gap-4">
            <%= form.submit @item.persisted? ? "Update Item" : "Create Item", class: "btn btn-warning" %>
            
            <% if @item.persisted? %>
              <%= link_to "New Item", new_item_path, class: "btn btn-outline-primary px-4" %>
            <% end %>
          
            <%= link_to "Back to Items", items_path, class: "btn btn-outline-secondary px-4",
                data: { confirm: @item.persisted? ? nil : "Are you sure you want to cancel? Any unsaved changes will be lost." } %>
            <%= link_to "Back to Menus", menus_path, class: "btn btn-outline-secondary px-4" %>    
          </div>
        <% end %>
        
        <% if @item.persisted? %>
          <div class="mt-3 text-end">
            <%= button_to "Delete Item", @item,
                          method: :delete,
                          form: { 
                            class: "delete-form",
                            data: { turbo_confirm: "Are you sure?" } 
                          },
                          class: "btn btn-danger" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  // Handle category selection
  document.querySelectorAll('.dropdown-item[data-category-id]').forEach(item => {
    item.addEventListener('click', (e) => {
      e.preventDefault();
      const categoryId = e.target.dataset.categoryId;
      const categoryName = e.target.textContent;
      
      // Update the hidden field
      document.getElementById('category-field').value = categoryId;
      
      // Update the dropdown button text
      document.getElementById('categoryDropdown').textContent = categoryName;
      
      // Update the category name in preview
      const categoryHeaders = document.querySelectorAll('h2');
      categoryHeaders.forEach(header => {
        if (header.textContent.includes('CATEGORY')) {
          header.textContent = categoryName.toUpperCase();
        }
      });
    });
  });

  // Validate category selection before submitting the form
  document.getElementById('item-form')?.addEventListener('submit', (e) => {
    if (!document.getElementById('category-field').value) {
      e.preventDefault();
      alert('Please select a category before saving');
      // Scroll to category dropdown
      document.querySelector('.position-absolute').scrollIntoView({ 
        behavior: 'smooth',
        block: 'center'
      });
    }
  });

  // Price calculation functionality
  document.getElementById('cash-price-input')?.addEventListener('input', function(e) {
    // Get raw cash price value (remove any currency symbols)
    const cashValue = parseFloat(this.value.replace(/[^0-9.-]/g, '')) || 0;
    
    // Calculate credit price (3% markup)
    const creditValue = (cashValue * 1.03).toFixed(2);
    
    // Update display fields
    document.getElementById('credit-price-display').value = creditValue;
    document.getElementById('credit-price-field').value = creditValue;
  });

  // Format currency on blur
  document.getElementById('cash-price-input')?.addEventListener('blur', function(e) {
    const value = parseFloat(this.value.replace(/[^0-9.-]/g, '')) || 0;
    this.value = value.toLocaleString('en-US', {
      style: 'decimal',
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    });
  });




</script>